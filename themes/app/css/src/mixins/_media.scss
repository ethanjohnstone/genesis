@charset "UTF-8";

/// Outputs a media-query block
///
/// @param {List} $query
///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.
///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).
///
///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.
///
/// @example scss - Usage
///   .responsive-element {
///      @include media(769px) {
///        display: block;
///      }
///   }
///
///  .new-context-element {
///    @include media(max-width 480px) {
///      display: block;
///    }
///  }
///
/// @example css - CSS Output
///  @media screen and (min-width: 769px) {
///    .responsive-element {
///      display: block;
///    }
///  }
///
///  @media screen and (max-width: 480px) {
///    .new-context-element {
///      display: block;
///    }
///  }

@mixin media($query: $feature $value) {
  @if length($query) == 1 {
    @media screen and ($default-feature: nth($query, 1)) {
      @content;
    }
  } @else {
    @media screen and (nth($query, 1): nth($query, 2)) {
      @content;
    }
  }
}
